// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: daily_discount.sql

package db

import (
	"context"

	"github.com/shopspring/decimal"
)

const createDailyDiscount = `-- name: CreateDailyDiscount :one
INSERT INTO agent_discounts (base_currency_id, discount_amount, discount_multiple) VALUES ($1, $2, $3) RETURNING id, base_currency_id, discount_amount, discount_multiple
`

type CreateDailyDiscountParams struct {
	BaseCurrencyID   int32           `json:"base_currency_id"`
	DiscountAmount   decimal.Decimal `json:"discount_amount"`
	DiscountMultiple decimal.Decimal `json:"discount_multiple"`
}

func (q *Queries) CreateDailyDiscount(ctx context.Context, arg CreateDailyDiscountParams) (AgentDiscount, error) {
	row := q.db.QueryRowContext(ctx, createDailyDiscount, arg.BaseCurrencyID, arg.DiscountAmount, arg.DiscountMultiple)
	var i AgentDiscount
	err := row.Scan(
		&i.ID,
		&i.BaseCurrencyID,
		&i.DiscountAmount,
		&i.DiscountMultiple,
	)
	return i, err
}

const deleteDailyDiscountByID = `-- name: DeleteDailyDiscountByID :exec
DELETE FROM agent_discounts WHERE id = $1
`

func (q *Queries) DeleteDailyDiscountByID(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteDailyDiscountByID, id)
	return err
}

const findDailyDiscountByBaseCurrencyID = `-- name: FindDailyDiscountByBaseCurrencyID :one
SELECT id, base_currency_id, discount_amount, discount_multiple FROM agent_discounts WHERE base_currency_id = $1
`

func (q *Queries) FindDailyDiscountByBaseCurrencyID(ctx context.Context, baseCurrencyID int32) (AgentDiscount, error) {
	row := q.db.QueryRowContext(ctx, findDailyDiscountByBaseCurrencyID, baseCurrencyID)
	var i AgentDiscount
	err := row.Scan(
		&i.ID,
		&i.BaseCurrencyID,
		&i.DiscountAmount,
		&i.DiscountMultiple,
	)
	return i, err
}

const findDailyDiscountByID = `-- name: FindDailyDiscountByID :one
SELECT id, base_currency_id, discount_amount, discount_multiple FROM agent_discounts WHERE id = $1
`

func (q *Queries) FindDailyDiscountByID(ctx context.Context, id int32) (AgentDiscount, error) {
	row := q.db.QueryRowContext(ctx, findDailyDiscountByID, id)
	var i AgentDiscount
	err := row.Scan(
		&i.ID,
		&i.BaseCurrencyID,
		&i.DiscountAmount,
		&i.DiscountMultiple,
	)
	return i, err
}

const getAllDailyDiscounts = `-- name: GetAllDailyDiscounts :many
SELECT id, base_currency_id, discount_amount, discount_multiple FROM agent_discounts
`

func (q *Queries) GetAllDailyDiscounts(ctx context.Context) ([]AgentDiscount, error) {
	rows, err := q.db.QueryContext(ctx, getAllDailyDiscounts)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []AgentDiscount{}
	for rows.Next() {
		var i AgentDiscount
		if err := rows.Scan(
			&i.ID,
			&i.BaseCurrencyID,
			&i.DiscountAmount,
			&i.DiscountMultiple,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const updateDailyDiscount = `-- name: UpdateDailyDiscount :one
UPDATE agent_discounts SET base_currency_id = $1, discount_amount = $2, discount_multiple = $3 WHERE id = $4 RETURNING id, base_currency_id, discount_amount, discount_multiple
`

type UpdateDailyDiscountParams struct {
	BaseCurrencyID   int32           `json:"base_currency_id"`
	DiscountAmount   decimal.Decimal `json:"discount_amount"`
	DiscountMultiple decimal.Decimal `json:"discount_multiple"`
	ID               int32           `json:"id"`
}

func (q *Queries) UpdateDailyDiscount(ctx context.Context, arg UpdateDailyDiscountParams) (AgentDiscount, error) {
	row := q.db.QueryRowContext(ctx, updateDailyDiscount,
		arg.BaseCurrencyID,
		arg.DiscountAmount,
		arg.DiscountMultiple,
		arg.ID,
	)
	var i AgentDiscount
	err := row.Scan(
		&i.ID,
		&i.BaseCurrencyID,
		&i.DiscountAmount,
		&i.DiscountMultiple,
	)
	return i, err
}
