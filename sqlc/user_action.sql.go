// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: user_action.sql

package db

import (
	"context"
	"encoding/json"

	"github.com/google/uuid"
)

const createUserAction = `-- name: CreateUserAction :one
INSERT INTO user_actions (action, message, payload, user_id) VALUES ($1, $2, $3, $4) RETURNING id, user_id, action, message, payload, created_at, updated_at
`

type CreateUserActionParams struct {
	Action  string          `json:"action"`
	Message string          `json:"message"`
	Payload json.RawMessage `json:"payload"`
	UserID  uuid.UUID       `json:"user_id"`
}

func (q *Queries) CreateUserAction(ctx context.Context, arg CreateUserActionParams) (UserAction, error) {
	row := q.db.QueryRowContext(ctx, createUserAction,
		arg.Action,
		arg.Message,
		arg.Payload,
		arg.UserID,
	)
	var i UserAction
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Action,
		&i.Message,
		&i.Payload,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
